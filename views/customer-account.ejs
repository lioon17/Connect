<%- include('partials/header') %>
    <div class="ca-container">
        <h1 class="ca-title">Your Account</h1>
        <div class="ca-grid">
            <div class="ca-card">
                <h2 class="ca-card-title">Account Overview</h2>
                <p class="ca-card-description">Manage your personal information</p>
                <div style="display: flex; align-items: center; margin-bottom: 15px;">
                    <img src="/images/sneakers.png" alt="User's avatar" class="ca-avatar">
                    <div style="margin-left: 15px;">
                        <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 5px;">
                            <h3 style="margin: 0;">Name:</h3>
                            <p id="accountName" style="margin: 0; font-weight: bold;">John Doe</p>
                        </div>
                        <div style="display: flex; align-items: center; gap: 10px; margin-top: 10px;">
                            <h3 style="margin: 0;">Email:</h3>
                            <p id="accountEmail" style="margin: 0; color: #666;">john.doe@example.com</p>
                        </div>
                    </div>
                </div>

                <div class="advertisement">
                     <!-- Advertisement Section
                <div style="border: 1px solid #ddd; padding: 15px; border-radius: 8px; margin-bottom: 15px;">
                    <h3 style="margin-top: 0; margin-bottom: 10px;">Advertise Our Products</h3>
                    <button id="advertiseBtn" style="background-color: #007bff; color: white; border: none; padding: 8px 12px; cursor: pointer; border-radius: 5px;">Advertise Now</button>
                </div>
                -->
                <!-- Copy Site Link Section -->
                <div style="border: 1px solid #ddd; padding: 15px; border-radius: 8px;">
                    <h3 style="margin-top: 0; margin-bottom: 10px;">Share Our Site</h3>
                    <input type="text" id="siteLink" value="https://yourwebsite.com" readonly style="border: 1px solid #ccc; padding: 5px; width: 200px;">
                    <button id="copyLinkBtn" style="background-color: #284aa7; color: white; border: none; padding: 5px 10px; cursor: pointer; border-radius: 5px;">Copy Link</button>
                </div>

                </div>
              <!--<button class="ca-button ca-button-outline ca-button-full">Edit Profile</button>-->
            </div>
            
            
            
            <div class="ca-card">
                <h2 class="ca-card-title">Order History</h2>
                <p class="ca-card-description">View and manage your recent orders</p>
                <div id="orderList">
                    <!-- Order items will be dynamically inserted here -->
                </div>
               <!-- <button class="ca-button ca-button-outline ca-button-full" style="margin-top: 15px;">View All Orders</button>-->
            </div>
            <div class="ca-card">
                <h2 class="ca-card-title">Account Settings</h2>
                <p class="ca-card-description">Manage your account preferences</p>
                <div class="ca-setting-item">
                    <label for="marketing-emails">Receive marketing emails</label>
                    <label class="ca-switch">
                        <input type="checkbox" id="marketing-emails">
                        <span class="ca-slider"></span>
                    </label>
                </div>

                <div class="ca-setting-item ca-password-item">
                    <label for="newPassword">Change Password</label>
                    <div class="ca-password-group">
                        <input type="password" id="newPassword" class="ca-input" placeholder="Enter new password">
                        <button id="savePasswordButton" class="ca-button">Save</button>
                    </div>
                </div>
                <div class="ca-setting-item ca-password-item">
                    <label for="newEmail">Change Email</label>
                    <div class="ca-password-group">
                        <input type="email" id="newEmail" class="ca-input" placeholder="Enter new email">
                        <button id="saveEmailButton" class="ca-button">Save</button>
                    </div>
                </div>
                <button id="deleteAccountButton" class="ca-button ca-button-outline ca-button-full" style="color: #dc3545; border-color: #dc3545;">Delete Account</button>
                
            
        </div>
    </div>
    <script src="/script.js"></script>
    <script>

   document.addEventListener('DOMContentLoaded', async () => {
    const orderList = document.getElementById('orderList');
    const accountName = document.getElementById('accountName');
    const accountEmail = document.getElementById('accountEmail');

    // Populate the account overview section
function populateAccountOverview(userDetails) {
    document.getElementById('accountName').textContent = userDetails.customer_name || 'N/A';
    document.getElementById('accountEmail').textContent = userDetails.customer_email || 'N/A';
}


    // Fetch account overview and order history from the API
    async function fetchAccountAndOrderHistory() {
        try {
            const response = await fetch('/api/order-history');
            const data = await response.json();

            if (response.ok && data.success) {
                // Populate account overview with the first order's customer details
                if (data.orders.length > 0) {
                    const userDetails = data.orders[0];
                    populateAccountOverview(userDetails);
                }

                // Populate the order list
                populateOrderList(data.orders);
            } else {
                orderList.innerHTML = `<p>No orders found.</p>`;
            }
        } catch (error) {
            console.error('Error fetching account and order history:', error);
            orderList.innerHTML = `<p>Failed to fetch orders. Please try again later.</p>`;
        }
    }

    // Populate the account overview section
    function populateAccountOverview(userDetails) {
        accountName.textContent = userDetails.customer_name || 'N/A';
        accountEmail.textContent = userDetails.customer_email || 'N/A';
    }

    // Populate the order list
    function populateOrderList(orders) {
        orderList.innerHTML = ''; // Clear existing items

        if (orders.length === 0) {
            orderList.innerHTML = `<p>No orders found.</p>`;
            return;
        }

        orders.forEach(order => {
            const orderItem = createOrderItem(order);
            orderList.appendChild(orderItem);
        });
    }

    // Create individual order item HTML
    function createOrderItem(order) {
        const orderItem = document.createElement('div');
        orderItem.className = 'order-item';
        orderItem.innerHTML = `
            <div class="ca-order-item">
                <div class="ca-order-row">
                    <p class="ca-order-id">Order #${order.order_id}</p>
                    <p class="ca-order-total">$${parseFloat(order.total_amount).toFixed(2)}</p>
                </div>
                <div class="ca-order-row">
                    <p class="ca-order-date">${new Date(order.order_date).toLocaleDateString()}</p>
                    <p class="ca-order-status">${order.order_status}</p>
                </div>
            </div>
        `;
        return orderItem;
    }

    // Fetch and display the account overview and order history on page load
    await fetchAccountAndOrderHistory();

    const savePasswordButton = document.getElementById('savePasswordButton');
    const saveEmailButton = document.getElementById('saveEmailButton');
    const deleteAccountButton = document.getElementById('deleteAccountButton');

    // Change Password
    savePasswordButton.addEventListener('click', async () => {
        const newPassword = document.getElementById('newPassword').value;

        if (!newPassword || newPassword.trim().length < 6) {
            alert('Password must be at least 6 characters long.');
            return;
        }

        try {
            const response = await fetch('/api/user/change-password', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ newPassword })
            });
            const data = await response.json();

            if (response.ok) {
                alert(data.message);
            } else {
                alert(data.message || 'Failed to change password.');
            }
        } catch (error) {
            console.error('Error changing password:', error);
            alert('An error occurred. Please try again later.');
        }
    });

    // Change Email
    saveEmailButton.addEventListener('click', async () => {
        const newEmail = document.getElementById('newEmail').value;

        if (!newEmail || !newEmail.includes('@')) {
            alert('Please provide a valid email address.');
            return;
        }

        try {
            const response = await fetch('/api/user/change-email', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ newEmail })
            });
            const data = await response.json();

            if (response.ok) {
                alert(data.message);
            } else {
                alert(data.message || 'Failed to change email.');
            }
        } catch (error) {
            console.error('Error changing email:', error);
            alert('An error occurred. Please try again later.');
        }
    });

    // Delete Account
    deleteAccountButton.addEventListener('click', async () => {
        if (!confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
            return;
        }

        try {
            const response = await fetch('/api/user/delete-account', {
                method: 'DELETE'
            });
            const data = await response.json();

            if (response.ok) {
                alert(data.message);
                window.location.href = '/'; // Redirect to homepage or login
            } else {
                alert(data.message || 'Failed to delete account.');
            }
        } catch (error) {
            console.error('Error deleting account:', error);
            alert('An error occurred. Please try again later.');
        }
    });
});


document.getElementById('copyLinkBtn').addEventListener('click', function() {
        const siteLink = document.getElementById('siteLink');
        siteLink.select();
        siteLink.setSelectionRange(0, 99999); // For mobile devices
        document.execCommand('copy');

        alert('Site link copied to clipboard!');
    });

    document.getElementById('advertiseBtn').addEventListener('click', function() {
        alert('Share our products with your friends and earn rewards!');
    });

    </script>
    <%- include('partials/footer') %>
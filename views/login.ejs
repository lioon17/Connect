<!DOCTYPE html> 
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Auth Form</title>
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .bg-gradient {
            background: linear-gradient(to bottom right, #1e3a8a, #000000);
        }
        .bg-white-10 {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .focus-ring-white:focus {
            box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.5);
        }
    </style>
</head>
<body class="bg-gradient min-h-screen flex items-center justify-center">
    <div class="homeicon">
        <a href="/">
        <i class="bi bi-house-door"></i>
    </a>
    </div>
    <div class="w-full max-w-md p-8 space-y-8">
        <h1 id="formTitle" class="text-4xl font-bold text-center text-white mb-12">
            USER LOGIN
        </h1>
        <form id="loginForm" class="space-y-6" method="POST">
            <div class="relative">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                </div>
                <input type="text" name="username" placeholder="Username" class="pl-10 pr-4 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
            </div>
            <div class="relative">
                <input type="password" name="password" placeholder="Password" class="pl-4 pr-10 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                    </svg>
                </div>
            </div>
            <button type="submit" class="w-full py-3 bg-white text-blue-900 rounded-full text-lg font-semibold hover:bg-gray-100 transition-colors">
                LOGIN
            </button>
        </form>
        

        <form id="signupForm" class="space-y-6 hidden"  method="POST">
            <div class="relative">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                </div>
                <input type="text" name="username" placeholder="Username" class="pl-10 pr-4 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
            </div>
            <div class="relative">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                </div>
                <input type="email" name="email" placeholder="Email" class="pl-10 pr-4 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
            </div>
            <div class="relative">
                <input type="password"  name="password" placeholder="Password" class="pl-4 pr-10 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                    </svg>
                </div>
            </div>
            <div class="relative">
                <input type="password"  name="confirmPassword" placeholder="Confirm Password" class="pl-4 pr-10 py-3 w-full bg-white-10 border-0 text-white placeholder-gray-400 rounded-full focus:outline-none focus-ring-white">
                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                    </svg>
                </div>
            </div>
            <button type="submit" class="w-full py-3 bg-white text-blue-900 rounded-full text-lg font-semibold hover:bg-gray-100 transition-colors">
                SIGN UP
            </button>
        </form>
        
        <div class="mt-6">
            <button id="toggleForm" type="button" class="w-full text-white hover:text-gray-200 flex items-center justify-center">
                Don't have an account? Sign up
                <svg xmlns="http://www.w3.org/2000/svg" class="ml-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                </svg>
            </button>
        </div>
    </div>
    <script>
        const loginForm = document.getElementById('loginForm');
        const signupForm = document.getElementById('signupForm');
        const formTitle = document.getElementById('formTitle');
        const toggleButton = document.getElementById('toggleForm');
        let isSignUp = false;
    
        toggleButton.addEventListener('click', () => {
            isSignUp = !isSignUp;
            loginForm.classList.toggle('hidden');
            signupForm.classList.toggle('hidden');
            formTitle.textContent = isSignUp ? 'SIGN UP' : 'USER LOGIN';
            toggleButton.textContent = isSignUp ? 'Already have an account? Login' : "Don't have an account? Sign up";
        });
    
        
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        const result = await response.json();

        if (response.ok) {
            showPopup('success', result.message || 'Login successful!');

            // Redirect based on role
            setTimeout(() => {
                if (result.role === 'admin') {
                    window.location.href = '/dashboard'; // Redirect admin to dashboard
                } else {
                    window.location.href = '/'; // Redirect user to home
                }
            }, 2000);
        } else {
            showPopup('error', result.error || 'Invalid login credentials.');
        }
    } catch (err) {
        showPopup('error', 'An unexpected error occurred. Please try again.');
    }
});

function showPopup(type, message) {
    const popup = document.createElement('div');
    popup.className = `popup ${type}-popup`;
    popup.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            ${
                type === 'success'
                    ? '<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>'
                    : '<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>'
            }
        </svg>
        <span>${message}</span>
    `;
    document.body.appendChild(popup);

    setTimeout(() => {
        popup.style.animation = 'slideDown 0.5s ease-out reverse';
        setTimeout(() => popup.remove(), 500); // Remove after slide up animation
    }, 3000); // Popup stays for 3 seconds
}


    
        signupForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(signupForm);
            const response = await fetch('/signup', {
                method: 'POST',
                body: new URLSearchParams(formData),
            });
    
            if (response.ok) {
                window.location.href = '/login'; // Redirect to login after signup
            } else {
                alert('Signup failed');
            }
        });

        
    </script>
    
</body>




</html>